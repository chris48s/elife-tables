<table-wrap xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" id="inlinetable1" position="anchor"><table frame="hsides" rules="groups"><thead><tr><th colspan="2">Algorithm 1. Algorithm to generate a representative line for the top of stripe X0 (<inline-formula><mml:math id="inf555"><mml:msub><mml:mi>l</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math></inline-formula>)</th></tr></thead><tbody><tr valign="top"><td rowspan="19"><break/><inline-formula><mml:math id="inf556"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo>&#8968;</mml:mo><mml:mfrac><mml:msubsup><mml:mi mathvariant="normal">&#928;</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msubsup><mml:mn>2</mml:mn></mml:mfrac><mml:mo>&#8969;</mml:mo></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> <break/>&#8194;&#8194;<inline-formula><mml:math id="inf557"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold">f</mml:mi><mml:mi mathvariant="bold">o</mml:mi><mml:mi mathvariant="bold">r</mml:mi></mml:mrow></mml:mrow><mml:mtext>&#160;</mml:mtext><mml:mi>i</mml:mi><mml:mtext>&#160;</mml:mtext><mml:mo>=</mml:mo><mml:mtext>&#160;</mml:mtext><mml:mn>1</mml:mn><mml:mtext>&#160;</mml:mtext><mml:mo>:</mml:mo><mml:mtext>&#160;</mml:mtext><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">&#928;</mml:mi><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi></mml:mrow><mml:mrow><mml:mi>L</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mrow></mml:mstyle></mml:math></inline-formula> <break/>&#8194;&#8194;&#8194;&#8194;<italic>Strike</italic> = 0 <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;if <inline-formula><mml:math id="inf558"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mover><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#8800;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mstyle></mml:math></inline-formula> or (<inline-formula><mml:math id="inf559"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">&#119935;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>&#8290;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf560"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">&#119935;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>&#8290;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>&#8800;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>) then <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#160;<bold>while</bold>&#160;<inline-formula><mml:math id="inf561"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>r</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>k</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>e</mml:mi></mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf562"><mml:mrow><mml:mi>j</mml:mi><mml:mo>&lt;</mml:mo><mml:msubsup><mml:mi mathvariant="normal">&#928;</mml:mi><mml:mi mathvariant="bold-italic">&#119935;</mml:mi><mml:mi>H</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>&#160;do <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;<inline-formula><mml:math id="inf563"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#160;<bold>if</bold>&#160;<inline-formula><mml:math id="inf564"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">&#119935;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>&#8290;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>&#160;then <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194; <inline-formula><mml:math id="inf565"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>r</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>k</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>e</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>r</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>k</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>e</mml:mi></mml:mrow><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow><mml:mo>&#9655;</mml:mo></mml:math></inline-formula> <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#160;<bold>else</bold> <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194; <inline-formula><mml:math id="inf566"><mml:mrow><mml:mrow><mml:mi>s</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>t</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>r</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>i</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>k</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>e</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#160;<bold>end if</bold> <break/>&#8194;&#8194;&#8194;&#8194;&#8194;&#8194;&#160;<bold>end while</bold> <break/>&#8194;&#8194;&#8194;&#8194;&#8194; <inline-formula><mml:math id="inf567"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mrow><mml:mo>&#9655;</mml:mo></mml:math></inline-formula> <break/>&#8194;&#8194;&#8194;&#8194;&#160;<bold>else</bold> <break/>&#8194;&#8194;&#8194;&#160;<bold>while</bold><inline-formula><mml:math id="inf568"><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">&#119935;</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>&#8290;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="inf569"><mml:mrow><mml:mi>j</mml:mi><mml:mo>&gt;</mml:mo><mml:msubsup><mml:mi mathvariant="normal">&#928;</mml:mi><mml:mi mathvariant="bold-italic">&#119935;</mml:mi><mml:mi>H</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> do <break/>&#8194;&#8194;&#8194;<inline-formula><mml:math id="inf570"><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mrow></mml:math></inline-formula> <break/>&#8194;&#160;<bold>end while</bold> <break/>&#8194;&#160;<bold>end if&#160;</bold> <break/>&#8194; <inline-formula><mml:math id="inf571"><mml:mrow><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>&#8290;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math></inline-formula> <break/>&#160;<bold>end</bold></td><td align="right" rowspan="19"><break/>&#9655;<italic>Initialise X0 interstripe search in the center.</italic> <break/><break/>&#9655;<italic>Initialise the number of consecutive empty sites in a column to be zero.</italic> <break/><break/>&#9655;<italic>If we are near to other X, keep moving up to determine the upper bound of the interstripe.</italic> <break/><break/>&#9655;<italic>Increment the number of consecutive empty sites in a column by one.</italic> <break/><italic><break/><break/><break/>Remove the two consecutively empty sites from the total count.</italic> <break/><break/>&#9655;<italic>If we have overshot the interstripe keep moving downwards until we reach the top of the interstripe.</italic></td></tr></tbody></table></table-wrap>