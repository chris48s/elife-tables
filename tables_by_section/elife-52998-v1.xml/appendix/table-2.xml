<table-wrap xmlns:ali="http://www.niso.org/schemas/ali/1.0/" xmlns:mml="http://www.w3.org/1998/Math/MathML" xmlns:xlink="http://www.w3.org/1999/xlink" id="inlinetable3" position="anchor"><table frame="hsides" rules="groups"><thead><tr><th colspan="2">Algorithm 3. Algorithm to calculate the tortuosity (<inline-formula><mml:math id="inf581"><mml:mrow><mml:mi>t</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>o</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>r</mml:mi><mml:mo>&#8290;</mml:mo><mml:mi>t</mml:mi></mml:mrow></mml:math></inline-formula>) of line <inline-formula><mml:math id="inf582"><mml:mi>L</mml:mi></mml:math></inline-formula> generated from a real fish</th></tr></thead><tbody><tr valign="top"><td rowspan="5"><italic>total</italic> = 0 <break/><inline-formula><mml:math id="inf583"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="bold">f</mml:mi><mml:mi mathvariant="bold">o</mml:mi><mml:mi mathvariant="bold">r</mml:mi></mml:mrow></mml:mrow><mml:mtext>&#160;</mml:mtext><mml:mi>i</mml:mi><mml:mtext>&#160;</mml:mtext><mml:mo>=</mml:mo><mml:mtext>&#160;</mml:mtext><mml:mn>2</mml:mn><mml:mtext>&#160;</mml:mtext><mml:mo>:</mml:mo><mml:mtext>&#160;</mml:mtext><mml:mi>k</mml:mi></mml:mrow></mml:mstyle></mml:math></inline-formula> <break/>&#8194;&#8194;&#8194;&#8194;<inline-formula><mml:math id="inf584"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:msqrt><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#8722;</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#8722;</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>&#8722;</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mn>2</mml:mn></mml:msup></mml:msqrt></mml:mrow></mml:mstyle></mml:math></inline-formula> <break/><bold>end</bold> <break/><inline-formula><mml:math id="inf585"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:msqrt><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>&#8722;</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>&#8722;</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mn>2</mml:mn></mml:msup></mml:msqrt></mml:mfrac></mml:mrow></mml:mstyle></mml:math></inline-formula><break/></td><td align="right" rowspan="5"><break/><break/><break/>&#9655;<italic>Compute the length of</italic> <inline-formula><mml:math id="inf586"><mml:mi>L</mml:mi></mml:math></inline-formula><italic>using the euclidean distance between consecutive points.</italic></td></tr></tbody></table></table-wrap>